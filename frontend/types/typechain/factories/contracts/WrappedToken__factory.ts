/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  WrappedToken,
  WrappedTokenInterface,
} from "../../contracts/WrappedToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBalanceOf",
        name: "kycToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "pushComm",
        type: "address",
      },
      {
        internalType: "address",
        name: "channelAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "erc1155TokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "LockedERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "erc1155TokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "LockedERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "erc1155TokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ReleasedERC20",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "erc1155TokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "ReleasedERC721",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "_channelAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_push",
    outputs: [
      {
        internalType: "contract IPUSHCommInterface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
    ],
    name: "erc20TokenID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
    ],
    name: "erc721TokenID",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "lockERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "lockERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "releaseERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "releaseERC721",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "kycToken",
        type: "address",
      },
    ],
    name: "setKYCToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "pushComm",
        type: "address",
      },
      {
        internalType: "address",
        name: "channelAddress",
        type: "address",
      },
    ],
    name: "setPushProtocol",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a0604052600060809081526003906200001a9082620001d2565b503480156200002857600080fd5b506040516200366e3803806200366e8339810160408190526200004b91620002b7565b60408051602081019091526000815283906200006781620000c1565b506005805460ff191690556200007d33620000d3565b50600680546001600160a01b039485166001600160a01b0319918216179091556007805493851693821693909317909255600880549190931691161790556200030b565b6002620000cf8282620001d2565b5050565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200015857607f821691505b6020821081036200017957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cd57600081815260208120601f850160051c81016020861015620001a85750805b601f850160051c820191505b81811015620001c957828155600101620001b4565b5050505b505050565b81516001600160401b03811115620001ee57620001ee6200012d565b6200020681620001ff845462000143565b846200017f565b602080601f8311600181146200023e5760008415620002255750858301515b600019600386901b1c1916600185901b178555620001c9565b600085815260208120601f198616915b828110156200026f578886015182559484019460019091019084016200024e565b50858210156200028e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6001600160a01b0381168114620002b457600080fd5b50565b600080600060608486031215620002cd57600080fd5b8351620002da816200029e565b6020850151909350620002ed816200029e565b604085015190925062000300816200029e565b809150509250925092565b613353806200031b6000396000f3fe608060405234801561001057600080fd5b50600436106101575760003560e01c80638456cb59116100c3578063ad2edf901161007c578063ad2edf90146102e6578063dfc40e31146102f9578063e985e9c51461030c578063f242432a14610348578063f2fde38b1461035b578063f45529821461036e57600080fd5b80638456cb59146102685780638da5cb5b14610270578063903acbdb1461029a57806398b6ca9b146102ad578063a22cb465146102c0578063a3c1c4a9146102d357600080fd5b80633f4ba83a116101155780633f4ba83a146102075780634e1273f41461020f5780635668c3f41461022f5780635c975abb14610242578063672bf7051461024d578063715018a61461026057600080fd5b8062fdd58e1461015c57806301ffc9a7146101825780630e89341c146101a557806329d06964146101c55780632eb2c2d6146101df57806337e4b0c2146101f4575b600080fd5b61016f61016a3660046121ad565b610381565b6040519081526020015b60405180910390f35b6101956101903660046121ed565b61041a565b6040519015158152602001610179565b6101b86101b336600461220a565b61046a565b6040516101799190612273565b61016f6101d3366004612286565b6001600160a01b031690565b6101f26101ed3660046123ea565b610475565b005b6101f2610202366004612493565b6104c1565b6101f26104f7565b61022261021d3660046124c6565b610509565b60405161017991906125cb565b6101f261023d3660046125de565b610632565b60055460ff16610195565b6101f261025b366004612645565b61070d565b6101f26107a5565b6101f26107b7565b60055461010090046001600160a01b03165b6040516001600160a01b039091168152602001610179565b6101f26102a8366004612694565b6107c7565b61016f6102bb3660046121ad565b6108b7565b6101f26102ce36600461270d565b6108ff565b6101f26102e1366004612286565b61090e565b6101f26102f4366004612744565b610937565b600754610282906001600160a01b031681565b61019561031a366004612493565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101f26103563660046127a3565b6109d2565b6101f2610369366004612286565b610a17565b600854610282906001600160a01b031681565b60006001600160a01b0383166103f15760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061044b57506001600160e01b031982166303a24d0760e21b145b8061041457506301ffc9a760e01b6001600160e01b0319831614610414565b606061041482610a8d565b6001600160a01b0385163314806104915750610491853361031a565b6104ad5760405162461bcd60e51b81526004016103e8906127fb565b6104ba8585858585610b6d565b5050505050565b6104c9610d5e565b600780546001600160a01b039384166001600160a01b03199182161790915560088054929093169116179055565b6104ff610d5e565b610507610dbe565b565b6060815183511461056e5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016103e8565b600083516001600160401b03811115610589576105896122a1565b6040519080825280602002602001820160405280156105b2578160200160208202803683370190505b50905060005b845181101561062a576105fd8582815181106105d6576105d661284a565b60200260200101518583815181106105f0576105f061284a565b6020026020010151610381565b82828151811061060f5761060f61284a565b602090810291909101015261062381612876565b90506105b8565b509392505050565b61063a610e10565b6001600160a01b03841661064f338285610e56565b60405163a9059cbb60e01b81526001600160a01b0385811660048301526024820185905286169063a9059cbb906044016020604051808303816000875af115801561069e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c2919061288f565b6106ff5760405162461bcd60e51b815260206004820152600e60248201526d31b0b713ba103a3930b739b332b960911b60448201526064016103e8565b6104ba858233878787610ff9565b610715610e10565b600061072185856108b7565b905061072f33826001610e56565b6040516323b872dd60e01b81523060048201526001600160a01b038481166024830152604482018690528616906323b872dd90606401600060405180830381600087803b15801561077f57600080fd5b505af1158015610793573d6000803e3d6000fd5b505050506104ba85858333878761113a565b6107ad610d5e565b6105076000611214565b6107bf610d5e565b61050761126e565b6107cf610e10565b60006001600160a01b0386166040516323b872dd60e01b81526001600160a01b03878116600483015230602483015260448201869052919250908716906323b872dd906064016020604051808303816000875af1158015610834573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610858919061288f565b6108955760405162461bcd60e51b815260206004820152600e60248201526d31b0b713ba103a3930b739b332b960911b60448201526064016103e8565b6108a1848285856112ab565b6108af8682338787876113d4565b505050505050565b6040516bffffffffffffffffffffffff19606084901b1660208201526034810182905260009060540160408051601f1981840301815291905280516020909101209392505050565b61090a3383836114ae565b5050565b610916610d5e565b600680546001600160a01b0319166001600160a01b03831617905550565b50565b61093f610e10565b600061094b86866108b7565b6040516323b872dd60e01b81526001600160a01b03868116600483015230602483015260448201889052919250908716906323b872dd90606401600060405180830381600087803b15801561099f57600080fd5b505af11580156109b3573d6000803e3d6000fd5b505050506109c483826001856112ab565b6108af86868387878761158e565b6001600160a01b0385163314806109ee57506109ee853361031a565b610a0a5760405162461bcd60e51b81526004016103e8906127fb565b6104ba8585858585611668565b610a1f610d5e565b6001600160a01b038116610a845760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103e8565b61093481611214565b600081815260046020526040812080546060929190610aab906128ac565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad7906128ac565b8015610b245780601f10610af957610100808354040283529160200191610b24565b820191906000526020600020905b815481529060010190602001808311610b0757829003601f168201915b505050505090506000815111610b4257610b3d836117ae565b610b66565b600381604051602001610b56929190612902565b6040516020818303038152906040525b9392505050565b8151835114610bcf5760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016103e8565b6001600160a01b038416610bf55760405162461bcd60e51b81526004016103e8906129ac565b33610c04818787878787611842565b60005b8451811015610cea576000858281518110610c2457610c2461284a565b602002602001015190506000858381518110610c4257610c4261284a565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610c925760405162461bcd60e51b81526004016103e8906129f1565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610ccf908490612a3b565b9250508190555050505080610ce390612876565b9050610c07565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610d3a929190612a4e565b60405180910390a4610d5081878787878761184c565b6108af818787878787611b13565b6005546001600160a01b036101009091041633146105075760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103e8565b610dc6611c6e565b6005805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60055460ff16156105075760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016103e8565b6001600160a01b038316610eb85760405162461bcd60e51b815260206004820152602360248201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260448201526265737360e81b60648201526084016103e8565b336000610ec484611cb7565b90506000610ed184611cb7565b9050610ef183876000858560405180602001604052806000815250611842565b6000858152602081815260408083206001600160a01b038a16845290915290205484811015610f6e5760405162461bcd60e51b8152602060048201526024808201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604482015263616e636560e01b60648201526084016103e8565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610ff08488600086866040518060200160405280600081525061184c565b50505050505050565b7fb7271e758ff408b37ddd718b846580fe18138146a5efcd28d0d6a74979e2a1f286868686868660405161103296959493929190612a73565b60405180910390a16007546001600160a01b0316158061105b57506008546001600160a01b0316155b6108af576007546008546001600160a01b039182169163ba3d69d7918116908790611087908b16611d02565b6110908a611d18565b6110a28a6001600160a01b0316611d02565b6110b48a6001600160a01b0316611d02565b6110bd8a611d18565b896040516020016110d396959493929190612ac1565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161110093929190612c24565b600060405180830381600087803b15801561111a57600080fd5b505af115801561112e573d6000803e3d6000fd5b50505050505050505050565b7ff6d170c2e977a15f6f88d5821ecf488aca751382e5add9230c224655a92cdeb586868686868660405161117396959493929190612c50565b60405180910390a16007546001600160a01b0316158061119c57506008546001600160a01b0316155b6108af576007546008546001600160a01b039182169163ba3d69d79181169086906111c8908b16611d02565b6111d18a611d18565b6111da8a611d18565b6111ec8a6001600160a01b0316611d02565b6111fe8a6001600160a01b0316611d02565b896040516020016110d396959493929190612c92565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b611276610e10565b6005805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610df33390565b6001600160a01b03841661130b5760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016103e8565b33600061131785611cb7565b9050600061132485611cb7565b905061133583600089858589611842565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290611365908490612a3b565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46113c58360008985858961184c565b610ff083600089898989611d77565b7fac867b0c94ce6505841ee92fa0e1daf2d34d549ddf3bd7f6a4e4656604c81dd586868686868660405161140d96959493929190612a73565b60405180910390a16007546001600160a01b0316158061143657506008546001600160a01b0316155b6108af576007546008546001600160a01b039182169163ba3d69d7918116908790611462908b16611d02565b61146b8a611d18565b61147d8a6001600160a01b0316611d02565b61148f8a6001600160a01b0316611d02565b6114988a611d18565b896040516020016110d396959493929190612d8f565b816001600160a01b0316836001600160a01b0316036115215760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016103e8565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b7faf6985cd85c6236f5219a3e4d053464810cadb35dc8ba7ecfbd8f25bdbffe60d8686868686866040516115c796959493929190612c50565b60405180910390a16007546001600160a01b031615806115f057506008546001600160a01b0316155b6108af576007546008546001600160a01b039182169163ba3d69d791811690869061161c908b16611d02565b6116258a611d18565b61162e8a611d18565b6116408a6001600160a01b0316611d02565b6116528a6001600160a01b0316611d02565b896040516020016110d396959493929190612e7a565b6001600160a01b03841661168e5760405162461bcd60e51b81526004016103e8906129ac565b33600061169a85611cb7565b905060006116a785611cb7565b90506116b7838989858589611842565b6000868152602081815260408083206001600160a01b038c168452909152902054858110156116f85760405162461bcd60e51b81526004016103e8906129f1565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611735908490612a3b565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611795848a8a86868a61184c565b6117a3848a8a8a8a8a611d77565b505050505050505050565b6060600280546117bd906128ac565b80601f01602080910402602001604051908101604052809291908181526020018280546117e9906128ac565b80156118365780601f1061180b57610100808354040283529160200191611836565b820191906000526020600020905b81548152906001019060200180831161181957829003601f168201915b50505050509050919050565b6108af8585611e32565b6001600160a01b038516158061186957506001600160a01b038416155b8061187d57506007546001600160a01b0316155b8061189157506008546001600160a01b0316155b6108af576040805174302b332b546f6b656e205472616e7366657265642b60581b6020820152815160158183030181526035909101909152806118dc6001600160a01b038916611d02565b6118ee886001600160a01b0316611d02565b611900886001600160a01b0316611d02565b6040516020016119139493929190612f5b565b60408051808303601f19018152828252605b60f81b6020840181905282516001818603018152602185018452604185019190915282516022818603018152604290940190925292509060005b8651811015611a7557806000036119f257826119938883815181106119865761198661284a565b6020026020010151611d18565b6040516020016119a492919061300e565b6040516020818303038152906040529250816119cb8783815181106119865761198661284a565b6040516020016119dc92919061300e565b6040516020818303038152906040529150611a63565b82611a088883815181106119865761198661284a565b604051602001611a19929190613054565b604051602081830303815290604052925081611a408783815181106119865761198661284a565b604051602001611a51929190613054565b60405160208183030381529060405291505b80611a6d81612876565b91505061195f565b506007546008546040516001600160a01b039283169263ba3d69d79216908b90611aa9908890889088908c9060200161309f565b6040516020818303038152906040526040518463ffffffff1660e01b8152600401611ad693929190612c24565b600060405180830381600087803b158015611af057600080fd5b505af1158015611b04573d6000803e3d6000fd5b50505050505050505050505050565b6001600160a01b0384163b156108af5760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611b579089908990889088908890600401613135565b6020604051808303816000875af1925050508015611b92575060408051601f3d908101601f19168201909252611b8f91810190613187565b60015b611c3e57611b9e6131a4565b806308c379a003611bd75750611bb26131c0565b80611bbd5750611bd9565b8060405162461bcd60e51b81526004016103e89190612273565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016103e8565b6001600160e01b0319811663bc197c8160e01b14610ff05760405162461bcd60e51b81526004016103e890613249565b60055460ff166105075760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016103e8565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611cf157611cf161284a565b602090810291909101015292915050565b60606104146001600160a01b0383166014611ff6565b606081600003611d425750506040805180820190915260048152630307830360e41b602082015290565b8160005b8115611d655780611d5681612876565b915050600882901c9150611d46565b611d6f8482611ff6565b949350505050565b6001600160a01b0384163b156108af5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611dbb9089908990889088908890600401613291565b6020604051808303816000875af1925050508015611df6575060408051601f3d908101601f19168201909252611df391810190613187565b60015b611e0257611b9e6131a4565b6001600160e01b0319811663f23a6e6160e01b14610ff05760405162461bcd60e51b81526004016103e890613249565b6001600160a01b0382161580611e5157506006546001600160a01b0316155b80611ec857506006546040516370a0823160e01b81526001600160a01b03848116600483015260009216906370a0823190602401602060405180830381865afa158015611ea2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ec691906132d6565b115b611f145760405162461bcd60e51b815260206004820152601d60248201527f73656e64657220646f65736e27742068617665204b594320746f6b656e00000060448201526064016103e8565b6001600160a01b0381161580611f3357506006546001600160a01b0316155b80611faa57506006546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a0823190602401602060405180830381865afa158015611f84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fa891906132d6565b115b61090a5760405162461bcd60e51b815260206004820181905260248201527f726563697069656e7420646f65736e27742068617665204b594320746f6b656e60448201526064016103e8565b606060006120058360026132ef565b612010906002612a3b565b6001600160401b03811115612027576120276122a1565b6040519080825280601f01601f191660200182016040528015612051576020820181803683370190505b509050600360fc1b8160008151811061206c5761206c61284a565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061209b5761209b61284a565b60200101906001600160f81b031916908160001a90535060006120bf8460026132ef565b6120ca906001612a3b565b90505b6001811115612142576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106120fe576120fe61284a565b1a60f81b8282815181106121145761211461284a565b60200101906001600160f81b031916908160001a90535060049490941c9361213b81613306565b90506120cd565b508315610b665760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016103e8565b80356001600160a01b03811681146121a857600080fd5b919050565b600080604083850312156121c057600080fd5b6121c983612191565b946020939093013593505050565b6001600160e01b03198116811461093457600080fd5b6000602082840312156121ff57600080fd5b8135610b66816121d7565b60006020828403121561221c57600080fd5b5035919050565b60005b8381101561223e578181015183820152602001612226565b50506000910152565b6000815180845261225f816020860160208601612223565b601f01601f19169290920160200192915050565b602081526000610b666020830184612247565b60006020828403121561229857600080fd5b610b6682612191565b634e487b7160e01b600052604160045260246000fd5b601f8201601f191681016001600160401b03811182821017156122dc576122dc6122a1565b6040525050565b60006001600160401b038211156122fc576122fc6122a1565b5060051b60200190565b600082601f83011261231757600080fd5b81356020612324826122e3565b60405161233182826122b7565b83815260059390931b850182019282810191508684111561235157600080fd5b8286015b8481101561236c5780358352918301918301612355565b509695505050505050565b600082601f83011261238857600080fd5b81356001600160401b038111156123a1576123a16122a1565b6040516123b8601f8301601f1916602001826122b7565b8181528460208386010111156123cd57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a0868803121561240257600080fd5b61240b86612191565b945061241960208701612191565b935060408601356001600160401b038082111561243557600080fd5b61244189838a01612306565b9450606088013591508082111561245757600080fd5b61246389838a01612306565b9350608088013591508082111561247957600080fd5b5061248688828901612377565b9150509295509295909350565b600080604083850312156124a657600080fd5b6124af83612191565b91506124bd60208401612191565b90509250929050565b600080604083850312156124d957600080fd5b82356001600160401b03808211156124f057600080fd5b818501915085601f83011261250457600080fd5b81356020612511826122e3565b60405161251e82826122b7565b83815260059390931b850182019282810191508984111561253e57600080fd5b948201945b838610156125635761255486612191565b82529482019490820190612543565b9650508601359250508082111561257957600080fd5b5061258685828601612306565b9150509250929050565b600081518084526020808501945080840160005b838110156125c0578151875295820195908201906001016125a4565b509495945050505050565b602081526000610b666020830184612590565b600080600080608085870312156125f457600080fd5b6125fd85612191565b935061260b60208601612191565b92506040850135915060608501356001600160401b0381111561262d57600080fd5b61263987828801612377565b91505092959194509250565b6000806000806080858703121561265b57600080fd5b61266485612191565b93506020850135925061267960408601612191565b915060608501356001600160401b0381111561262d57600080fd5b600080600080600060a086880312156126ac57600080fd5b6126b586612191565b94506126c360208701612191565b93506126d160408701612191565b92506060860135915060808601356001600160401b038111156126f357600080fd5b61248688828901612377565b801515811461093457600080fd5b6000806040838503121561272057600080fd5b61272983612191565b91506020830135612739816126ff565b809150509250929050565b600080600080600060a0868803121561275c57600080fd5b61276586612191565b94506020860135935061277a60408701612191565b925061278860608701612191565b915060808601356001600160401b038111156126f357600080fd5b600080600080600060a086880312156127bb57600080fd5b6127c486612191565b94506127d260208701612191565b9350604086013592506060860135915060808601356001600160401b038111156126f357600080fd5b6020808252602f908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526e195c881b9bdc88185c1c1c9bdd9959608a1b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820161288857612888612860565b5060010190565b6000602082840312156128a157600080fd5b8151610b66816126ff565b600181811c908216806128c057607f821691505b6020821081036128e057634e487b7160e01b600052602260045260246000fd5b50919050565b600081516128f8818560208601612223565b9290920192915050565b600080845481600182811c91508083168061291e57607f831692505b6020808410820361293d57634e487b7160e01b86526022600452602486fd5b818015612951576001811461296657612993565b60ff1986168952841515850289019650612993565b60008b81526020902060005b8681101561298b5781548b820152908501908301612972565b505084890196505b5050505050506129a381856128e6565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b8082018082111561041457610414612860565b604081526000612a616040830185612590565b82810360208401526129a38185612590565b6001600160a01b038781168252602082018790528581166040830152841660608201526080810183905260c060a08201819052600090612ab590830184612247565b98975050505050505050565b7f302b332b455243323020546f6b656e2052656c65617365642b000000000000008152693d913a37b5b2b7111d1160b11b60198201528651600090612b0d816023850160208c01612223565b61088b60f21b602391840191820181905273113bb930b83832b22fba37b5b2b72fb4b2111d1160611b60258301528851612b4e816039850160208d01612223565b60399201918201526711333937b6911d1160c11b603b8201528651612b7a816043840160208b01612223565b612c16612c08612c02612bee612bc4612be8612bd2612bc4612bbe612bac60438b8d010161088b60f21b815260020190565b65113a37911d1160d11b815260060190565b8f6128e6565b61088b60f21b815260020190565b691130b6b7bab73a111d1160b11b8152600a0190565b8b6128e6565b67113230ba30911d1160c11b815260080190565b876128e6565b61227d60f01b815260020190565b9a9950505050505050505050565b6001600160a01b038481168252831660208201526060604082018190526000906129a390830184612247565b6001600160a01b038781168252602082018790526040820186905284811660608301528316608082015260c060a08201819052600090612ab590830184612247565b7f302b332b455243373231204e46542052656c65617365642b00000000000000008152693d913a37b5b2b7111d1160b11b60188201528651600090612cde816022850160208c01612223565b61088b60f21b6022918401918201819052651134b2111d1160d11b60248301528851612d1181602a850160208d01612223565b602a92019182015273113bb930b83832b22fba37b5b2b72fb4b2111d1160611b602c8201528651612d49816040840160208b01612223565b612c16612c08612c02612bee612bc4612be8612bac612bc4612bbe612d7b60408b8d010161088b60f21b815260020190565b6711333937b6911d1160c11b815260080190565b7f302b332b455243323020546f6b656e204c6f636b65642b0000000000000000008152693d913a37b5b2b7111d1160b11b60178201528651600090612ddb816021850160208c01612223565b61088b60f21b602191840191820181905273113bb930b83832b22fba37b5b2b72fb4b2111d1160611b60238301528851612e1c816037850160208d01612223565b60379201918201526711333937b6911d1160c11b60398201528651612e48816041840160208b01612223565b612c16612c08612c02612bee612bc4612be8612bd2612bc4612bbe612bac60418b8d010161088b60f21b815260020190565b75302b332b455243373231204e4654204c6f636b65642b60501b8152693d913a37b5b2b7111d1160b11b601682015260008751612ebe816020850160208c01612223565b808301905061088b60f21b806020830152651134b2111d1160d11b60228301528851612ef1816028850160208d01612223565b602892019182015273113bb930b83832b22fba37b5b2b72fb4b2111d1160611b602a8201528651612f2981603e840160208b01612223565b612c16612c08612c02612bee612bc4612be8612bac612bc4612bbe612d7b603e8b8d010161088b60f21b815260020190565b60008551612f6d818460208a01612223565b6c3d9137b832b930ba37b9111d1160991b9083019081528551612f9781600d840160208a01612223565b69111611333937b6911d1160b11b600d92909101918201528451612fc2816017840160208901612223565b671116113a37911d1160c11b601792909101918201528351612feb81601f840160208801612223565b6711161134b239911d60c11b601f92909101918201526027019695505050505050565b60008351613020818460208801612223565b601160f91b9083018181528451909190613041816001850160208901612223565b6001920191820152600201949350505050565b60008351613066818460208801612223565b61161160f11b9083019081528351613085816002840160208801612223565b601160f91b60029290910191820152600301949350505050565b600085516130b1818460208a01612223565b8551908301906130c5818360208a01612223565b6b2e961130b6b7bab73a39911d60a11b910190815284516130ed81600c840160208901612223565b692e96113230ba30911d1160b11b600c92909101918201528351613118816016840160208801612223565b61227d60f01b601692909101918201526018019695505050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061316190830186612590565b82810360608401526131738186612590565b90508281036080840152612ab58185612247565b60006020828403121561319957600080fd5b8151610b66816121d7565b600060033d11156131bd5760046000803e5060005160e01c5b90565b600060443d10156131ce5790565b6040516003193d81016004833e81513d6001600160401b0381602484011181841117156131fd57505050505090565b82850191508151818111156132155750505050505090565b843d870101602082850101111561322f5750505050505090565b61323e602082860101876122b7565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906132cb90830184612247565b979650505050505050565b6000602082840312156132e857600080fd5b5051919050565b808202811582820484141761041457610414612860565b60008161331557613315612860565b50600019019056fea26469706673582212207ce1ac904b675cf978812bbc2608b3d24a32fccc7d18d3267b1b92a6c656a0f664736f6c63430008110033";

type WrappedTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WrappedTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WrappedToken__factory extends ContractFactory {
  constructor(...args: WrappedTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    kycToken: PromiseOrValue<string>,
    pushComm: PromiseOrValue<string>,
    channelAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<WrappedToken> {
    return super.deploy(
      kycToken,
      pushComm,
      channelAddress,
      overrides || {}
    ) as Promise<WrappedToken>;
  }
  override getDeployTransaction(
    kycToken: PromiseOrValue<string>,
    pushComm: PromiseOrValue<string>,
    channelAddress: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      kycToken,
      pushComm,
      channelAddress,
      overrides || {}
    );
  }
  override attach(address: string): WrappedToken {
    return super.attach(address) as WrappedToken;
  }
  override connect(signer: Signer): WrappedToken__factory {
    return super.connect(signer) as WrappedToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WrappedTokenInterface {
    return new utils.Interface(_abi) as WrappedTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): WrappedToken {
    return new Contract(address, _abi, signerOrProvider) as WrappedToken;
  }
}
