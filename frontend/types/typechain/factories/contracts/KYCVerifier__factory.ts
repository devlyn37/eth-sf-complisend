/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  KYCVerifier,
  KYCVerifierInterface,
} from "../../contracts/KYCVerifier";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IBalanceOf",
        name: "kycToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610167380380610167833981810160405281019061003291906100ed565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061011a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100a88261007d565b9050919050565b60006100ba8261009d565b9050919050565b6100ca816100af565b81146100d557600080fd5b50565b6000815190506100e7816100c1565b92915050565b60006020828403121561010357610102610078565b5b6000610111848285016100d8565b91505092915050565b603f806101286000396000f3fe6080604052600080fdfea26469706673582212208a49e9eed0fd7dd7c1c46c4bfc60be9a2fd4d6bcb2ba9657334e336388eb29ac64736f6c63430008110033";

type KYCVerifierConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KYCVerifierConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KYCVerifier__factory extends ContractFactory {
  constructor(...args: KYCVerifierConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    kycToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KYCVerifier> {
    return super.deploy(kycToken, overrides || {}) as Promise<KYCVerifier>;
  }
  override getDeployTransaction(
    kycToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(kycToken, overrides || {});
  }
  override attach(address: string): KYCVerifier {
    return super.attach(address) as KYCVerifier;
  }
  override connect(signer: Signer): KYCVerifier__factory {
    return super.connect(signer) as KYCVerifier__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KYCVerifierInterface {
    return new utils.Interface(_abi) as KYCVerifierInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KYCVerifier {
    return new Contract(address, _abi, signerOrProvider) as KYCVerifier;
  }
}
