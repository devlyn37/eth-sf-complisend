/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  KYCERC20Votes,
  KYCERC20VotesInterface,
} from "../../contracts/KYCERC20Votes";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20Metadata",
        name: "oldErc20",
        type: "address",
      },
      {
        internalType: "contract IBalanceOf",
        name: "kycToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "fromDelegate",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "toDelegate",
        type: "address",
      },
    ],
    name: "DelegateChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "delegate",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "previousBalance",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newBalance",
        type: "uint256",
      },
    ],
    name: "DelegateVotesChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_oldERC20",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "pos",
        type: "uint32",
      },
    ],
    name: "checkpoints",
    outputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "fromBlock",
            type: "uint32",
          },
          {
            internalType: "uint224",
            name: "votes",
            type: "uint224",
          },
        ],
        internalType: "struct ERC20Votes.Checkpoint",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
    ],
    name: "delegate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "delegatee",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "delegateBySig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "delegates",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastTotalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getPastVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "getVotes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "lock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "numCheckpoints",
    outputs: [
      {
        internalType: "uint32",
        name: "",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "release",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051620026473803806200264783398101604081905262000035916200028e565b80826001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000075573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200009f9190810190620002e3565b80604051806040016040528060018152602001603160f81b815250856001600160a01b03166306fdde036040518163ffffffff1660e01b8152600401600060405180830381865afa158015620000f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001239190810190620002e3565b866001600160a01b03166395d89b416040518163ffffffff1660e01b8152600401600060405180830381865afa15801562000162573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200018c9190810190620002e3565b60036200019a838262000447565b506004620001a9828262000447565b5050825160208085019190912083518483012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c0019052805194019390932091935091906080523060c052610120525050600a8054600b80546001600160a01b03199081166001600160a01b039a8b1617909155169590961694909417909455506200051392505050565b6001600160a01b03811681146200028b57600080fd5b50565b60008060408385031215620002a257600080fd5b8251620002af8162000275565b6020840151909250620002c28162000275565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60006020808385031215620002f757600080fd5b82516001600160401b03808211156200030f57600080fd5b818501915085601f8301126200032457600080fd5b815181811115620003395762000339620002cd565b604051601f8201601f19908116603f01168101908382118183101715620003645762000364620002cd565b8160405282815288868487010111156200037d57600080fd5b600093505b82841015620003a1578484018601518185018701529285019262000382565b600086848301015280965050505050505092915050565b600181811c90821680620003cd57607f821691505b602082108103620003ee57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200044257600081815260208120601f850160051c810160208610156200041d5750805b601f850160051c820191505b818110156200043e5782815560010162000429565b5050505b505050565b81516001600160401b03811115620004635762000463620002cd565b6200047b81620004748454620003b8565b84620003f4565b602080601f831160018114620004b357600084156200049a5750858301515b600019600386901b1c1916600185901b1785556200043e565b600085815260208120601f198616915b82811015620004e457888601518255948401946001909101908401620004c3565b5085821015620005035787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e05161010051610120516120e4620005636000396000610f8201526000610fd101526000610fac01526000610f0501526000610f2f01526000610f5901526120e46000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80636fcfff45116100de578063a457c2d711610097578063d505accf11610071578063d505accf14610365578063dd46706414610378578063dd62ed3e1461038b578063f1127ed81461039e57600080fd5b8063a457c2d71461032c578063a9059cbb1461033f578063c3cda5201461035257600080fd5b80636fcfff451461029a57806370a08231146102c25780637ecebe00146102eb5780638e539e8c146102fe57806395d89b41146103115780639ab24eb01461031957600080fd5b80633644e515116101305780633644e5151461021857806337bdc99b1461022057806339509351146102355780633a46b1a814610248578063587cde1e1461025b5780635c19a95c1461028757600080fd5b806306fdde0314610178578063095ea7b31461019657806318160ddd146101b957806323b872dd146101cb5780632af6b17f146101de578063313ce56714610209575b600080fd5b6101806103db565b60405161018d9190611d6b565b60405180910390f35b6101a96101a4366004611dd5565b61046d565b604051901515815260200161018d565b6002545b60405190815260200161018d565b6101a96101d9366004611dff565b610487565b600b546101f1906001600160a01b031681565b6040516001600160a01b03909116815260200161018d565b6040516012815260200161018d565b6101bd6104ab565b61023361022e366004611e3b565b6104ba565b005b6101a9610243366004611dd5565b610543565b6101bd610256366004611dd5565b610565565b6101f1610269366004611e54565b6001600160a01b039081166000908152600760205260409020541690565b610233610295366004611e54565b6105e4565b6102ad6102a8366004611e54565b6105f1565b60405163ffffffff909116815260200161018d565b6101bd6102d0366004611e54565b6001600160a01b031660009081526020819052604090205490565b6101bd6102f9366004611e54565b610613565b6101bd61030c366004611e3b565b610631565b61018061068d565b6101bd610327366004611e54565b61069c565b6101a961033a366004611dd5565b610723565b6101a961034d366004611dd5565b61079e565b610233610360366004611e80565b6107ac565b610233610373366004611ed8565b6108e2565b610233610386366004611e3b565b610a46565b6101bd610399366004611f42565b610acc565b6103b16103ac366004611f75565b610af7565b60408051825163ffffffff1681526020928301516001600160e01b0316928101929092520161018d565b6060600380546103ea90611fb5565b80601f016020809104026020016040519081016040528092919081815260200182805461041690611fb5565b80156104635780601f1061043857610100808354040283529160200191610463565b820191906000526020600020905b81548152906001019060200180831161044657829003601f168201915b5050505050905090565b60003361047b818585610b7b565b60019150505b92915050565b600033610495858285610c9f565b6104a0858585610d19565b506001949350505050565b60006104b5610ef8565b905090565b6104c4338261101f565b600b546040516323b872dd60e01b8152306004820152336024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af115801561051b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061053f9190611fe9565b5050565b60003361047b8185856105568383610acc565b6105609190612021565b610b7b565b60004382106105bb5760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064015b60405180910390fd5b6001600160a01b03831660009081526008602052604090206105dd9083611029565b9392505050565b6105ee33826110e6565b50565b6001600160a01b0381166000908152600860205260408120546104819061115f565b6001600160a01b038116600090815260056020526040812054610481565b60004382106106825760405162461bcd60e51b815260206004820152601f60248201527f4552433230566f7465733a20626c6f636b206e6f7420796574206d696e65640060448201526064016105b2565b610481600983611029565b6060600480546103ea90611fb5565b6001600160a01b0381166000908152600860205260408120548015610710576001600160a01b03831660009081526008602052604090206106de600183612034565b815481106106ee576106ee612047565b60009182526020909120015464010000000090046001600160e01b0316610713565b60005b6001600160e01b03169392505050565b600033816107318286610acc565b9050838110156107915760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105b2565b6104a08286868403610b7b565b60003361047b818585610d19565b834211156107fc5760405162461bcd60e51b815260206004820152601d60248201527f4552433230566f7465733a207369676e6174757265206578706972656400000060448201526064016105b2565b604080517fe48329057bfd03d55e49b547132e39cffd9c1820ad7b9d4c5307691425d15adf60208201526001600160a01b0388169181019190915260608101869052608081018590526000906108769061086e9060a001604051602081830303815290604052805190602001206111c8565b858585611216565b90506108818161123e565b86146108cf5760405162461bcd60e51b815260206004820152601960248201527f4552433230566f7465733a20696e76616c6964206e6f6e63650000000000000060448201526064016105b2565b6108d981886110e6565b50505050505050565b834211156109325760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e6500000060448201526064016105b2565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886109618c61123e565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e00160405160208183030381529060405280519060200120905060006109bc826111c8565b905060006109cc82878787611216565b9050896001600160a01b0316816001600160a01b031614610a2f5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e6174757265000060448201526064016105b2565b610a3a8a8a8a610b7b565b50505050505050505050565b600b546040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610a9d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac19190611fe9565b506105ee3382611266565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b60408051808201909152600080825260208201526001600160a01b0383166000908152600860205260409020805463ffffffff8416908110610b3b57610b3b612047565b60009182526020918290206040805180820190915291015463ffffffff8116825264010000000090046001600160e01b0316918101919091529392505050565b6001600160a01b038316610bdd5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105b2565b6001600160a01b038216610c3e5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105b2565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610cab8484610acc565b90506000198114610d135781811015610d065760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105b2565b610d138484848403610b7b565b50505050565b6001600160a01b038316610d7d5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105b2565b6001600160a01b038216610ddf5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105b2565b610dea838383611270565b6001600160a01b03831660009081526020819052604090205481811015610e625760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105b2565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610e99908490612021565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610ee591815260200190565b60405180910390a3610d1384848461127f565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610f5157507f000000000000000000000000000000000000000000000000000000000000000046145b15610f7b57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b61053f828261128a565b8154600090815b8181101561108d57600061104482846112a2565b90508486828154811061105957611059612047565b60009182526020909120015463ffffffff16111561107957809250611087565b611084816001612021565b91505b50611030565b81156110d1578461109f600184612034565b815481106110af576110af612047565b60009182526020909120015464010000000090046001600160e01b03166110d4565b60005b6001600160e01b031695945050505050565b6001600160a01b038281166000818152600760208181526040808420805485845282862054949093528787166001600160a01b03198416811790915590519190951694919391928592917f3134e8a2e6d97e929a7e54011ea5485d7d196dd5f0ba4d4ef95803e8e3fc257f9190a4610d138284836112bd565b600063ffffffff8211156111c45760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203360448201526532206269747360d01b60648201526084016105b2565b5090565b60006104816111d5610ef8565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000611227878787876113fa565b91509150611234816114e7565b5095945050505050565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b61053f828261169d565b61127a8383611727565b505050565b61127a8383836118eb565b611294828261191d565b610d136009611a7e83611a8a565b60006112b1600284841861205d565b6105dd90848416612021565b816001600160a01b0316836001600160a01b0316141580156112df5750600081115b1561127a576001600160a01b0383161561136d576001600160a01b0383166000908152600860205260408120819061131a90611a7e85611a8a565b91509150846001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a7248383604051611362929190918252602082015260400190565b60405180910390a250505b6001600160a01b0382161561127a576001600160a01b038216600090815260086020526040812081906113a390611c0385611a8a565b91509150836001600160a01b03167fdec2bacdd2f05b59de34da9b523dff8be42e5e38e818c82fdb0bae774387a72483836040516113eb929190918252602082015260400190565b60405180910390a25050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561143157506000905060036114de565b8460ff16601b1415801561144957508460ff16601c14155b1561145a57506000905060046114de565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa1580156114ae573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166114d7576000600192509250506114de565b9150600090505b94509492505050565b60008160048111156114fb576114fb61207f565b036115035750565b60018160048111156115175761151761207f565b036115645760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e6174757265000000000000000060448201526064016105b2565b60028160048111156115785761157861207f565b036115c55760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e6774680060448201526064016105b2565b60038160048111156115d9576115d961207f565b036116315760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b60648201526084016105b2565b60048160048111156116455761164561207f565b036105ee5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b60648201526084016105b2565b6116a78282611c0f565b6002546001600160e01b0310156117195760405162461bcd60e51b815260206004820152603060248201527f4552433230566f7465733a20746f74616c20737570706c79207269736b73206f60448201526f766572666c6f77696e6720766f74657360801b60648201526084016105b2565b610d136009611c0383611a8a565b6001600160a01b03821615806117465750600a546001600160a01b0316155b806117bd5750600a546040516370a0823160e01b81526001600160a01b03848116600483015260009216906370a0823190602401602060405180830381865afa158015611797573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117bb9190612095565b115b6118095760405162461bcd60e51b815260206004820152601d60248201527f73656e64657220646f65736e27742068617665204b594320746f6b656e00000060448201526064016105b2565b6001600160a01b03811615806118285750600a546001600160a01b0316155b8061189f5750600a546040516370a0823160e01b81526001600160a01b03838116600483015260009216906370a0823190602401602060405180830381865afa158015611879573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061189d9190612095565b115b61053f5760405162461bcd60e51b815260206004820181905260248201527f726563697069656e7420646f65736e27742068617665204b594320746f6b656e60448201526064016105b2565b6001600160a01b0383811660009081526007602052604080822054858416835291205461127a929182169116836112bd565b6001600160a01b03821661197d5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105b2565b61198982600083611270565b6001600160a01b038216600090815260208190526040902054818110156119fd5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105b2565b6001600160a01b0383166000908152602081905260408120838303905560028054849290611a2c908490612034565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361127a8360008461127f565b60006105dd8284612034565b825460009081908015611ad55785611aa3600183612034565b81548110611ab357611ab3612047565b60009182526020909120015464010000000090046001600160e01b0316611ad8565b60005b6001600160e01b03169250611af183858763ffffffff16565b9150600081118015611b2f57504386611b0b600184612034565b81548110611b1b57611b1b612047565b60009182526020909120015463ffffffff16145b15611b8f57611b3d82611d02565b86611b49600184612034565b81548110611b5957611b59612047565b9060005260206000200160000160046101000a8154816001600160e01b0302191690836001600160e01b03160217905550611bfa565b856040518060400160405280611ba44361115f565b63ffffffff168152602001611bb885611d02565b6001600160e01b0390811690915282546001810184556000938452602093849020835194909301519091166401000000000263ffffffff909316929092179101555b50935093915050565b60006105dd8284612021565b6001600160a01b038216611c655760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105b2565b611c7160008383611270565b8060026000828254611c839190612021565b90915550506001600160a01b03821660009081526020819052604081208054839290611cb0908490612021565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a361053f6000838361127f565b60006001600160e01b038211156111c45760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20326044820152663234206269747360c81b60648201526084016105b2565b600060208083528351808285015260005b81811015611d9857858101830151858201604001528201611d7c565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b0381168114611dd057600080fd5b919050565b60008060408385031215611de857600080fd5b611df183611db9565b946020939093013593505050565b600080600060608486031215611e1457600080fd5b611e1d84611db9565b9250611e2b60208501611db9565b9150604084013590509250925092565b600060208284031215611e4d57600080fd5b5035919050565b600060208284031215611e6657600080fd5b6105dd82611db9565b803560ff81168114611dd057600080fd5b60008060008060008060c08789031215611e9957600080fd5b611ea287611db9565b95506020870135945060408701359350611ebe60608801611e6f565b92506080870135915060a087013590509295509295509295565b600080600080600080600060e0888a031215611ef357600080fd5b611efc88611db9565b9650611f0a60208901611db9565b95506040880135945060608801359350611f2660808901611e6f565b925060a0880135915060c0880135905092959891949750929550565b60008060408385031215611f5557600080fd5b611f5e83611db9565b9150611f6c60208401611db9565b90509250929050565b60008060408385031215611f8857600080fd5b611f9183611db9565b9150602083013563ffffffff81168114611faa57600080fd5b809150509250929050565b600181811c90821680611fc957607f821691505b60208210810361126057634e487b7160e01b600052602260045260246000fd5b600060208284031215611ffb57600080fd5b815180151581146105dd57600080fd5b634e487b7160e01b600052601160045260246000fd5b808201808211156104815761048161200b565b818103818111156104815761048161200b565b634e487b7160e01b600052603260045260246000fd5b60008261207a57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052602160045260246000fd5b6000602082840312156120a757600080fd5b505191905056fea26469706673582212209f4c22c69d4ce4d68a53af5f83f7d8b43037bf62eb40ce50ee1891ab394e131964736f6c63430008110033";

type KYCERC20VotesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KYCERC20VotesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KYCERC20Votes__factory extends ContractFactory {
  constructor(...args: KYCERC20VotesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    oldErc20: PromiseOrValue<string>,
    kycToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KYCERC20Votes> {
    return super.deploy(
      oldErc20,
      kycToken,
      overrides || {}
    ) as Promise<KYCERC20Votes>;
  }
  override getDeployTransaction(
    oldErc20: PromiseOrValue<string>,
    kycToken: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(oldErc20, kycToken, overrides || {});
  }
  override attach(address: string): KYCERC20Votes {
    return super.attach(address) as KYCERC20Votes;
  }
  override connect(signer: Signer): KYCERC20Votes__factory {
    return super.connect(signer) as KYCERC20Votes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KYCERC20VotesInterface {
    return new utils.Interface(_abi) as KYCERC20VotesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KYCERC20Votes {
    return new Contract(address, _abi, signerOrProvider) as KYCERC20Votes;
  }
}
